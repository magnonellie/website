initSidebarItems({"enum":[["Trans","Types of state transitions."]],"struct":[["Application","An Application is the root object of the game engine. It binds the OS event loop, state machines, timers and other core components in a central place."],["ApplicationBuilder","`ApplicationBuilder` is an interface that allows for creation of an `Application` using a custom set of configuration. This is the normal way an `Application` object is created."],["GameData","Default game data"],["GameDataBuilder","Builder for default game data"],["StateData","State data encapsulates the data sent to all state functions from the application main loop."],["World","The `World` struct contains the component storages and other resources."]],"trait":[["Builder","A common trait for `EntityBuilder` and `LazyBuilder`, allowing either to be used. Entity is definitely alive, but the components may or may not exist before a call to `World::maintain`."],["Config","Trait implemented by the `config!` macro."],["DataInit","Initialise trait for game data"],["State","A trait which defines game states that can be used by the state machine."]]});